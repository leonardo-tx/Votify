services:
  test:
    build:
      context: ../
      dockerfile: docker/Dockerfile.test
    depends_on:
      db-test:
        condition: service_healthy
    volumes:
      - ./target:/build/votify-test/target-copy
    environment:
      FRONTEND_BASE_URL: "http://nginx"
      DATABASE_NAME: "db-test"

  frontend:
    build:
      context: ../
      dockerfile: docker/Dockerfile.frontend
    environment:
      NEXT_PROXY_URL: "http://nginx"

  db-test:
    image: mysql:9.3.0
    environment:
      MYSQL_DATABASE: votifydb
      MYSQL_ROOT_PASSWORD: Admin@123
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 3s
      retries: 10

  selenium-hub:
    image: selenium/hub:4.32.0
    environment:
      - GRID_MAX_SESSION=10
      - GRID_BROWSER_TIMEOUT=300
      - GRID_TIMEOUT=300

  chrome-node:
    image: selenium/node-chrome
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  firefox-node:
    image: selenium/node-firefox
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  nginx:
    image: nginx:stable
    environment:
      API_HOST: test
      API_PORT: 8081
      WEB_HOST: frontend
      WEB_PORT: 3000
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
    command:
      - /bin/sh
      - -c
      - |
        envsubst '$$API_HOST $$API_PORT $$WEB_HOST $$WEB_PORT' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf
        nginx -g 'daemon off;'
    depends_on:
      - test
      - frontend
